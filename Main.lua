do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v64=0;local v65;while true do if (v64==0) then v65=v2(v0(v29,16));if v18 then local v77=v5(v65,v18);v18=nil;return v77;else return v65;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v66=(1726 -(13 + 1713)) -0;local v67;while true do if (v66==(1737 -(587 + 1150))) then v67=(v30/((50 -((947 -(724 + 219)) + 44))^(v31-1)))%((5 -3)^(((v32-1) -(v31-(1 + 0))) + 1));return v67-(v67%((459 -(312 + 146)) + 0));end end else local v68=(4177 -2953) -(754 + 470);local v69;while true do if (v68==(0 + 0)) then v69=(1 + 1)^(v31-(378 -(111 + 266)));return (((v30%(v69 + v69))>=v69) and (1 + 0)) or 0;end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=364 -(145 + 219);local v39;local v40;while true do if (v38==(631 -(55 + (738 -(11 + 152))))) then return (v40 * (969 -713)) + v39;end if (v38==(0 -0)) then v39,v40=v1(v15,v17,v17 + ((9 -4) -3));v17=v17 + (129 -(68 + 59));v38=1555 -(374 + 1180);end end end local function v22()local v41=(3375 -(660 + 923)) -(1420 + 372);local v42;local v43;local v44;local v45;while true do if ((0 -0)==v41) then v42,v43,v44,v45=v1(v15,v17,v17 + (829 -(552 + 274)));v17=v17 + 3 + 1;v41=(434 + 1283) -(34 + 1682);end if (v41==(2 -1)) then return (v45 * (41089126 -24311910)) + (v44 * (16959 + 48577)) + (v43 * (1181 -925)) + v42;end end end local function v23()local v46=v22();local v47=v22();return (( -(6 -4) * v19(v47,38 -6)) + 1 + 0) * ((239 -(196 + 41))^(v19(v47,14 + 7,9 + 10 + 12) -(1167 -(26 + 118)))) * ((((v19(v47,1 + 0,46 -(218 -(146 + 46))) * ((1 + 1 + 0)^(28 + 4 + 0))) + v46)/((2 + 0)^(49 + 3))) + (569 -(496 + 72)));end local function v24(v33)local v48;if  not v33 then v33=v22();if (v33==(0 + 0)) then return "";end end v48=v3(v15,v17,(v17 + v33) -(2 -1));v17=v17 + v33;local v49={};for v62=1, #v48 do v49[v62]=v2(v1(v3(v48,v62,v62)));end return v6(v49);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v50=0 + 0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v50==(1809 -(9 + 1798))) then v55=nil;v56=nil;v50=6 -3;end if (v50==3) then v57=nil;while true do local v70=0;while true do if (v70==(241 -(78 + 162))) then if (v51==2) then local v78=0;while true do if (v78==1) then for v97=1 -0,v22() do v54[v97]=v22();end return v55;end if (v78==(0 -0)) then local v96=0;while true do if (1==v96) then v78=1;break;end if (v96~=(0 -0)) then else for v102=1,v22() do local v103=0 -0;local v104;while true do if (v103~=0) then else v104=v20();if (v19(v104,1,1)~=(1264 -(312 + 952))) then else local v113=0 -0;local v114;local v115;local v116;local v117;local v118;while true do if (0==v113) then local v119=0 + 0;while true do if (v119==(1 -0)) then v113=1 -0;break;end if (v119==(0 + 0)) then v114=0;v115=nil;v119=463 -(100 + 362);end end end if (v113==1) then local v120=0 -0;while true do if (v120~=1) then else v113=2;break;end if (v120==0) then v116=nil;v117=nil;v120=1 -0;end end end if (v113==(1 + 1)) then v118=nil;while true do if (0~=v114) then else local v196=242 -(62 + 180);local v197;while true do if (v196~=0) then else v197=0;while true do if (1==v197) then v114=1;break;end if (v197~=(0 + 0)) then else local v242=494 -(62 + 432);while true do if (v242~=(0 -0)) then else v115=0;v116=nil;v242=1;end if (v242~=1) then else v197=1 -0;break;end end end end break;end end end if (v114~=2) then else while true do if (v115~=(1 + 0)) then else local v208=229 -(94 + 135);while true do if (v208==0) then local v243=0 + 0;while true do if (v243~=(1355 -(448 + 907))) then else v118={v21(),v21(),nil,nil};if (v116==(0 + 0)) then local v276=0;local v277;while true do if (v276~=(0 + 0)) then else v277=0 -0;while true do if (0~=v277) then else v118[3]=v21();v118[13 -9]=v21();break;end end break;end end elseif (v116==(1 + 0)) then v118[540 -(32 + 505)]=v22();elseif (v116==2) then v118[1 + 2]=v22() -(2^(22 -6));elseif (v116==3) then local v293=0 -0;local v294;local v295;while true do if (v293~=(1 + 0)) then else while true do if ((0 -0)==v294) then v295=0 -0;while true do if (v295==0) then v118[11 -8]=v22() -((111 -(17 + 92))^(20 -4));v118[4]=v21();break;end end break;end end break;end if (v293==0) then local v299=0;while true do if (v299==0) then v294=0;v295=nil;v299=3 -2;end if (v299==(1 + 0)) then v293=4 -3;break;end end end end end v243=1 + 0;end if ((84 -(10 + 73))==v243) then v208=1;break;end end end if (v208==(1 + 0)) then v115=1 + 1;break;end end end if (v115==0) then local v209=0;local v210;while true do if (v209==(0 + 0)) then v210=0 + 0;while true do if (v210~=1) then else v115=1;break;end if (0==v210) then v116=v19(v104,1 + 1,3);v117=v19(v104,3 + 1,6);v210=1 -0;end end break;end end end if (v115~=3) then else if (v19(v117,3,3)==(1 + 0)) then v118[7 -3]=v57[v118[4]];end v52[v102]=v118;break;end if (v115~=2) then else local v212=0;while true do if ((0 -0)~=v212) then else local v244=0 -0;while true do if (v244~=(1 + 0)) then else v212=52 -(17 + 34);break;end if (v244~=0) then else if (v19(v117,1,1)~=1) then else v118[5 -3]=v57[v118[2]];end if (v19(v117,5 -3,2)==(1395 -(526 + 868))) then v118[949 -(922 + 24)]=v57[v118[858 -(148 + 707)]];end v244=1;end end end if (v212==1) then v115=3;break;end end end end break;end if (v114~=1) then else local v198=1866 -(27 + 1839);while true do if (v198==(156 -(109 + 46))) then v114=2;break;end if ((0 + 0)==v198) then v117=nil;v118=nil;v198=1026 -(267 + 758);end end end end break;end end end break;end end end for v105=1 + 0,v22() do v53[v105-(1 + 0)]=v27();end v96=1 + 0;end end end end end break;end if (v70==0) then if (v51==(1833 -(940 + 893))) then local v79=0 -0;while true do if (v79==0) then v52={};v53={};v79=1;end if (v79~=(1 + 0)) then else v54={};v55={v52,v53,nil,v54};v79=6 -4;end if (v79==2) then v51=1;break;end end end if ((2 -1)~=v51) then else local v80=0;local v81;while true do if (v80==0) then v81=0 -0;while true do if (v81==0) then v56=v22();v57={};v81=1 + 0;end if (v81==(1 -0)) then local v101=0;while true do if (v101==0) then for v108=1075 -(478 + 596),v56 do local v109=0;local v110;local v111;local v112;while true do if (v109==(3 -2)) then v112=nil;while true do if (v110~=0) then else local v170=0 -0;local v171;while true do if (v170==(0 -0)) then v171=0 -0;while true do if (v171==(1400 -(1368 + 32))) then local v224=0;local v225;while true do if (0~=v224) then else v225=1962 -(1935 + 27);while true do if (v225==1) then v171=1;break;end if (0==v225) then local v275=1404 -(835 + 569);while true do if (v275==0) then v111=v20();v112=nil;v275=1 -0;end if (v275==1) then v225=1;break;end end end end break;end end end if (1==v171) then v110=1;break;end end break;end end end if (v110~=1) then else if (v111==(3 -2)) then v112=v20()~=0;elseif (v111==(2 + 0)) then v112=v23();elseif (v111~=3) then else v112=v24();end v57[v108]=v112;break;end end break;end if (v109~=(0 + 0)) then else v110=0;v111=nil;v109=2 -1;end end end v55[8 -5]=v20();v101=1 + 0;end if (1~=v101) then else v81=2;break;end end end if (v81==2) then v51=7 -5;break;end end break;end end end v70=1;end end end break;end if (v50~=(0 -0)) then else v51=0;v52=nil;v50=1 + 0;end if (v50~=1) then else v53=nil;v54=nil;v50=1396 -(907 + 487);end end end local function v28(v34,v35,v36)local v58=0;local v59;local v60;local v61;while true do if (v58==0) then v59=v34[1];v60=v34[2];v58=1;end if (v58==1) then v61=v34[3];return function(...)local v71=0;local v72;local v73;local v74;local v75;local v76;while true do if (v71==3) then A,B=v26(v10(v76));if  not A[1] then local v82=v34[4][v72] or "?";error("Script error at ["   .. v82   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v71==0) then v72=1;v73= -1;v71=1;end if (v71==1) then v74={...};v75=v11("#",...) -1;v71=2;end if (2==v71) then v76=nil;function v76()local v83=v59;local v84=Const;local v85=v60;local v86=v61;local v87=v26;local v88={};local v89={};local v90={};for v94=0,v75 do if ((((380 + 2375) -(597 + 501))>=(3397 -1794)) and (v94>=v86)) then v88[v94-v86]=v74[v94 + 1 + 0];else v90[v94]=v74[v94 + 1 + 0];end end local v91=(v75-v86) + (1721 -((1724 -(127 + 775)) + 898));local v92;local v93;while true do local v95=(401 + 812) -(740 + 473);while true do if ((v95==(1 + 0)) or ((1801 + 1356)<(2229 -(68 + 312)))) then if ((v93<=(14 + 3)) or (((738 -(4 + 343)) -233)==(373 + 31))) then if (((350 + 229)>=(12 + 65)) and (v93<=(7 + 1))) then if (((2846 + 441 + 1642)==(5863 -(562 + 372))) and (v93<=(4 -1))) then if ((v93<=((1 -0) + 0)) or (((59 + 4073) -2294)==(3523 -(746 + 314)))) then if ((v93==((5093 -3842) -(353 + 898))) or ((6885 -4664)>(14615 -9819))) then if (((6891 -4133)>(2598 -(708 + 1191))) and (v90[v92[8 -6]]==v92[(10 -6) + 0])) then v72=v72 + (2 -1);else v72=v92[3 + 0];end else v72=v92[2 + 1];end elseif ((v93>((403 -(72 + 329)) -0)) or ((2589 + 1485)<(212 + 983))) then v90[v92[1 + 1]][v92[5 -2]]=v90[v92[1599 -(638 + 957)]];else v90[v92[2]]=v92[615 -(182 + 430)];end elseif ((v93<=(14 -9)) or ((127 + 506)>=(1984 -1232))) then if (((3739 + 947)>=(12059 -7615)) and (v93==((10 -7) + 1))) then local v123=0 -0;local v124;local v125;while true do if (((1428 -(545 + (2621 -1739)))==v123) or ((1179 + 511)>((8930 -(1862 + 62)) -2195))) then for v201=1 + 0, #v89 do local v202=(790 -(188 + 83)) -(374 + 145);local v203;local v204;while true do if (((17241 -12656)>=(7838 -4296)) and ((3 -2)==v202)) then while true do if (((11298 -6633)>=(895 -(124 + 176))) and ((0 -0)==v203)) then v204=v89[v201];for v263=0 -0, #v204 do local v264=1329 -(376 + 953);local v265;local v266;local v267;while true do if (((421 + (8831 -5456))==(6052 -2256)) and (v264==(1 + 0))) then v267=v265[97 -(23 + 72)];if (((v266==v90) and (v267>=v124)) or ((4721 -(97 + 79))<(3924 -(1531 + 418)))) then local v281=(1509 -(1468 + 41)) + 0;local v282;while true do if ((v281==(0 -0)) or ((1703 + 1254)>=(4849 -(782 + (1232 -(471 + 570)))))) then v282=(624 + 186) -(442 + 368);while true do if (((2093 -(893 + 296))<(8412 -5740)) and (v282==(0 + 0))) then v125[v267]=v266[v267];v265[1]=v125;break;end end break;end end end break;end if ((v264==(0 + 0)) or ((3011 + 1931)<=(351 + 121))) then v265=v204[v263];v266=v265[1 + 0];v264=(1 + 0) -0;end end end break;end end break;end if ((v202==(0 -0)) or ((5048 -(585 + 1396))<2979)) then local v226=(883 -(391 + 492)) -0;while true do if (((5423 -(111 + 667))>=3098) and (v226==(3 -2))) then v202=1 -0;break;end if (((0 + 0)==v226) or ((695 + 2989)<=((1005 + 938) -(1009 + 240)))) then v203=0 + 0;v204=nil;v226=956 -(384 + 571);end end end end end break;end if (((3387 -(848 + 782))>(3894 -2590)) and (v123==(0 + 0))) then v124=v92[1 + 1];v125={};v123=3 -2;end end else v90[v92[2 + 0]]=v35[v92[1 + 2]];end elseif (((1786 + 2204)>(9770 -6003)) and (v93<=6)) then local v127=0 -0;local v128;local v129;local v130;while true do if (((2412 -(1935 + 27))>(170 -75)) and (v127==(1 + (0 -0)))) then v130=91 -(70 + 21);for v205=v128,v92[1601 -(1493 + 104)] do local v206=0 -0;local v207;while true do if ((v206==(0 + 0)) or ((5297 -(284 + 142))<(614 + (969 -(147 + 315))))) then v207=901 -((2089 -(1589 + 290)) + 691);while true do if (((0 + 0)==v207) or (((4163 -3036) + 2294)>=(1569 + 2386))) then v130=v130 + (1467 -(711 + 755));v90[v205]=v129[v130];break;end end break;end end end break;end if (((4414 -(457 + 894))>=(2541 -(1009 + 42))) and (v127==((0 + 0) -0))) then local v199=1323 -(1259 + (87 -(13 + 10)));while true do if ((v199==(1 -(0 -0))) or ((6029 -(6612 -(784 + 1204)))==(1624 + 1131))) then v127=(346 + 302) -((1210 -714) + 151);break;end if (((7845 -5722)<=(1852 + 2773)) and (0==v199)) then v128=v92[1037 -(621 + 414)];v129={v90[v128](v12(v90,v128 + (610 -(425 + 184)),v73))};v199=1 + 0;end end end end elseif ((v93>(16 -9)) or ((14093 -9924)>((1413 -(228 + 24)) + 3460))) then local v175=90 -(21 + 69);local v176;local v177;local v178;local v179;while true do if (((3 -1)==v175) or ((1454 + 2297)==(6707 -((492 -350) + 1710)))) then while true do if (((131 -46)<(4045 -((885 -460) + 402))) and (v176==(1923 -(1071 + 852)))) then local v235=0 -0;while true do if (((0 + 0)==v235) or ((3769 -1316)<(3163 -(996 + 286)))) then v177=v92[9 -7];v178={v90[v177](v90[v177 + (1 -0)])};v235=(1 + 0) -0;end if (((2334 -((2466 -(647 + 1092)) + 476))<(1719 -(12 + 192))) and (v235==((657 -(601 + 55)) -0))) then v176=1172 -(1131 + 40);break;end end end if ((v176==((2 + 1) -(2 + 0))) or ((755 + 262)>=((3488 + 473) -(1349 + 402)))) then v179=(862 -(445 + 417)) + 0;for v245=v177,v92[4 + 0] do local v246=0 -0;local v247;local v248;while true do if ((v246==(1450 -(866 + (2275 -1692)))) or (((1947 + 2575) -3031)==(6662 -(489 + (2744 -(797 + 654)))))) then while true do if ((v247==(0 + 0)) or ((13809 -10911)>=(4461 -(15 + 25)))) then v248=0 + 0;while true do if ((v248==(686 -(647 + 39))) or ((4370 -(496 + 129))==(1310 -(253 + 372)))) then v179=v179 + (1813 -((2487 -(289 + 626)) + 240));v90[v245]=v178[v179];break;end end break;end end break;end if (((3687 -(1093 + 392))<=(3596 -((674 -(123 + 126)) + 117 + 22))) and (v246==((2291 -(192 + 1198)) -(459 + 442)))) then v247=0 + 0;v248=nil;v246=1;end end end break;end end break;end if (((3743 -(125 + 869))>=(1021 -381)) and (v175==((1 + 1) -1))) then v178=nil;v179=nil;v175=7 -5;end if ((v175==(0 + 0)) or ((3430 + (840 -(156 + 332)))>=(5814 -(719 + 604)))) then v176=1643 -(894 + 749);v177=nil;v175=1;end end else local v180=0 + 0;local v181;local v182;local v183;while true do if (((172 + 619 + 1232)<(6407 -2916)) and (v180==(1004 -(518 + 485)))) then v183=nil;while true do if (((4230 -(480 + 563))>2315) and ((0 -0)==v181)) then local v236=937 -(246 + 691);while true do if ((v236==0) or ((1409 -(22 + 4 + 36))==(1734 + 1579))) then v182=v92[8 -5];v183=v90[v182];v236=3 -2;end if ((4793>=(720 -(331 + 35))) and (v236==(2 -(764 -(363 + 400))))) then v181=1 + 0;break;end end end if ((2139==(1469 + 375 + 295)) and (1==v181)) then for v249=v182 + (1594 -(1370 + 223)),v92[3 + 1] do v183=v183   .. v90[v249];end v90[v92[160 -(142 + 16)]]=v183;break;end end break;end if ((v180==(1265 -(210 + 1055))) or ((3107 -(971 + 860))>(363 + 1793))) then v181=0 + 0;v182=nil;v180=(1910 -(296 + 1612)) -1;end end end elseif ((v93<=(673 -(634 + 27))) or (568>=((3500 -(684 + 244)) -(854 + 67)))) then if ((v93<=10) or ((4188 -(376 + 214))==(4317 -(312 + 27 + 228)))) then if ((v93>(7 + 2)) or ((4452 -2827)==((2363 -(605 + 491)) -405))) then v90[v92[1176 -(130 + 1044)]]=v90[v92[6 -3]][v92[4 + 0]];else local v132=0 -0;local v133;local v134;while true do if (((661 + 13 + 54)<((22446 -14592) -(2402 + 1819))) and (v132==((0 -0) -0))) then v133=(897 -(836 + 61)) + 0;v134=nil;v132=1 + 0;end if ((v132==(2 -1)) or ((229 + 198)>(683 + 406))) then while true do if (((2628 -(377 + 275))>(5865 -4104)) and (v133==(0 -0))) then v134=v92[(17 -12) -3];v90[v134](v12(v90,v134 + ((199 + 355) -(69 + 205 + 279)),v92[4 -1]));break;end end break;end end end elseif ((v93==(21 -10)) or ((4788 -(624 + 370))<(2902 -1225))) then if (((8383 -5451)>(4098 -1662)) and (v92[2 -0]==v90[v92[1955 -(253 + 1698)]])) then v72=v72 + 1 + (0 -0);else v72=v92[202 -(41 + 158)];end else local v135=0 -0;local v136;local v137;local v138;while true do if ((v135==(0 -0)) or ((500 + 2756)>((8113 -4076) -(85 + 21)))) then v136=0 -0;v137=nil;v135=741 -(677 + 63);end if (((1967 -(401 + 354))>=(3884 -3037)) and (v135==1)) then v138=nil;while true do if (((584 + 342)>(258 + 597)) and (v136==((71 + 954) -(435 + 590)))) then v137=v92[1500 -(1377 + 121)];v138=v90[v92[1 + 2]];v136=223 -(146 + 76);end if (((2 -1)==v136) or ((3767 + 136)<=(12344 -9222))) then v90[v137 + (2 -1)]=v138;v90[v137]=v138[v92[15 -11]];break;end end break;end end end elseif (((3203 -(1317 + 250))<(7351 -4768)) and (v93<=(5 + (42 -33)))) then if (((1732 + 1965)>((734 + 1961) -(139 + 1177))) and (v93>(38 -25))) then local v139=1520 -(228 + 1292);local v140;local v141;local v142;local v143;local v144;local v145;while true do if (((3213 -(273 + (221 -109)))>(3133 -(173 + 276 + (154 -51)))) and ((4 -2)==v139)) then v144=nil;v145=nil;v139=1816 -(1391 + 422);end if ((v139==((2156 -(55 + 148)) -(1485 + 467))) or (313>(5328 -3493))) then v142=nil;v143=nil;v139=1 + 1;end if ((v139==(0 -0)) or ((7020 -5439)>=(2951 -(445 + (269 -118))))) then v140=0 -(0 + 0);v141=nil;v139=334 -(315 + 18);end if (((676 + 3286)>(112 + 1483)) and ((940 -(465 + 165 + 307))==v139)) then while true do if ((v140==(737 -(553 + 181))) or (2346<(2123 -(700 + 1116)))) then if ((((4941 -(398 + 788)) -(68 + 423))==(5127 -((2107 -(779 + 1159)) + 1694))) and v145) then local v238=0 + 0;local v239;local v240;while true do if ((v238==(0 -0)) or ((1862 -(69 + (1248 -(679 + 400))))>(3682 + 890))) then v239=0 + 0;v240=nil;v238=3 -2;end if ((v238==1) or ((2620 -(579 + 1029))>=(3294 -(1214 + (1101 -381))))) then while true do if ((v239==(0 -0)) or (((614 -(243 + 16)) + 1276)<=(1078 -(676 + 66)))) then v240=0 + 0;while true do if (((5935 -3922)<=(7431 -3291)) and (v240==((940 -(841 + 99)) + 0))) then v90[v143]=v145;v72=v92[1 + 2];break;end end break;end end break;end end else v72=v72 + 1 + 0;end break;end if (((271 + 2236)<=(22 + 4971)) and (v140==(1 + 0))) then v143=v141 + 2 + 0;v144={v90[v141](v90[v141 + 1],v90[v143])};v140=(8 -3) -3;end if ((v140==(0 + 0)) or ((2791 -982)<(2306 -1788))) then local v215=1755 -(1286 + 469);while true do if ((v215==(794 -(165 + 10 + (1724 -1105)))) or ((4240 -(1322 + 356))<=((3048 -1475) -1023))) then v141=v92[2 + 0 + 0];v142=v92[1 + 3];v215=4 -3;end if (((533 -347)<(638 + 1660)) and (v215==(2000 -(1177 + 822)))) then v140=1;break;end end end if (((6580 -(1870 + 87))==(5368 -(169 + 576))) and (2==v140)) then local v216=559 -(499 + 60);while true do if (((1132 + 1830)>=(4179 -(899 + 490))) and ((2 -1)==v216)) then v140=(6 -3) + 0;break;end if (((5754 -(1568 + 41))>=(2331 -((2474 -(682 + 1200)) + 1268))) and (v216==(0 -0))) then for v255=1 + 0,v142 do v90[v143 + v255]=v144[v255];end v145=v144[3 -2];v216=1 -0;end end end end break;end end else v90[v92[1148 -(737 + 409)]]=v36[v92[1 + 2]];end elseif (((4630 -(273 + 1638))>((1223 -(289 + 304)) + 6)) and (v93<=((131 -97) -19))) then v90[v92[1 + 1]][v90[v92[2 + 1]]]=v90[v92[4]];elseif ((v93==(23 -(5 + 2))) or ((3279 -1385)==(3041 -(1580 + 201)))) then local v184=0 + 0;local v185;local v186;while true do if ((v184==((2 -1) + 0)) or (2971==(2275 -1556))) then while true do if ((v185==(0 + 0)) or ((1477 -(76 + 409))>(4174 -(462 + 879)))) then v186=v92[1 + 1];do return v12(v90,v186,v186 + v92[3 -0]);end break;end end break;end if (((3867 -(259 + 147))>=(38 + 524)) and (v184==((778 -485) -(287 + 6)))) then v185=0 + 0;v186=nil;v184=465 -(430 + 34);end end elseif ( not v90[v92[6 -(1440 -(426 + 1010))]] or ((1949 -(1206 + 590))>=4216)) then v72=v72 + (1061 -(464 + 596));else v72=v92[12 -9];end elseif (((478 + 213)>(1037 -609)) and (v93<=(5 + 21))) then if (((863 -(900 -(208 + 54)))<(17559 -13090)) and (v93<=(77 -56))) then if ((v93<=(92 -73)) or ((4046 -(938 + 243))<(4120 -(1061 + 292)))) then if (((4799 -(193 + 12))>(6809 -4658)) and (v93==(1 + 17))) then local v148=1749 -(1006 + 154 + 589);local v149;local v150;local v151;local v152;local v153;while true do if (((690 + 2333)>=(187 + 484)) and (v148==0)) then v149=0 -0;v150=nil;v148=1 + 0;end if ((v148==(2 -1)) or ((1779 + 800)>(704 + 3347))) then local v200=0 -0;while true do if ((v200==(1 + 0)) or ((1412 + 2350)>=(2401 + 1824))) then v148=5 -3;break;end if (((8641 -4370)>=(589 + 94)) and (v200==(1368 -(1261 + 107)))) then v151=nil;v152=nil;v200=1;end end end if ((v148==(1 + 1)) or (((9448 -4163) -1146)<=(7074 -4719))) then v153=nil;while true do if ((v149==(0 + 0)) or ((7899 -3684)==(2304 -998))) then local v217=1719 -(1433 + 286);local v218;while true do if ((((1924 -(1082 + 842)) + 0)==v217) or ((1324 + 207)<((2742 -(786 + 377)) -((1428 -(759 + 71)) + 335)))) then v218=0 + 0;while true do if ((v218==(0 -0)) or ((191 + (1161 -692))==(1137 + 1256))) then local v274=0 -0;while true do if (((21 + 43)<(1264 + 212)) and (v274==(2 -1))) then v218=1 -0;break;end if (((2244 + 540)>=((1016 + 1143) -1570)) and (v274==(0 + 0 + 0))) then v150=v92[1001 -(266 + 733)];v151,v152=v87(v90[v150](v90[v150 + 1 + 0]));v274=2 -1;end end end if ((v218==((77 -45) -(10 + 21))) or ((3546 -(94 + 984))<(4256 -2647))) then v149=1 + 0;break;end end break;end end end if ((v149==(1 + 1)) or ((1092 + 415)<(438 + 709))) then for v227=v150,v73 do local v228=0 -(0 + 0);while true do if ((v228==((603 -(100 + 466)) -(28 + 9))) or ((835 + 879)<((790 -540) + 358))) then v153=v153 + (1082 -(876 + 205));v90[v227]=v151[v153];break;end end end break;end if ((v149==(2 -1)) or ((53 + 221)>=(169 + 427))) then local v219=0 -0;while true do if ((v219==(1493 -(861 + 631))) or ((385 + 137)>=(3561 -(1240 + 601)))) then v149=411 -(70 + 178 + 161);break;end if (((120 + 35)<(4390 -1940)) and (v219==(222 -(102 + 120)))) then v73=(v152 + v150) -(3 -2);v153=0 -0;v219=1 + 0;end end end end break;end end else local v154=0 + 0;local v155;local v156;while true do if (((939 + 113)<(3985 -(194 + 297))) and (v154==(1857 -(868 + 989)))) then v155=0 -0;v156=nil;v154=3 -2;end if (((1360 -809)<=(5292 -3884)) and ((1 -0)==v154)) then while true do if (((10735 -6931)==3804) and ((485 -(344 + 141))==v155)) then v156=v92[(1240 + 533) -(1397 + (896 -522))];v90[v156]=v90[v156](v90[v156 + (2 -1)]);break;end end break;end end end elseif (((1667 -(95 + 1294))<(582 + 3065)) and (v93==((18 + 26) -24))) then if ((v90[v92[1359 -(1241 + 116)]]==v90[v92[1 + 3]]) or (2455>(10626 -7029))) then v72=v72 + 1 + 0;else v72=v92[(333 + 1279) -(128 + 1481)];end else do return;end end elseif ((v93<=(94 -71)) or (((1956 -1127) + 79)>1544)) then if ((v93==(44 -22)) or ((3604 -(315 + 1484))>=(16017 -11276))) then v90[v92[537 -(369 + 166)]]=v90[v92[543 -(338 + 202)]];else for v173=v92[4 -2],v92[287 -(119 + 165)] do v90[v173]=nil;end end elseif ((v93<=(9 + 15)) or ((5763 -1429)>(9951 -(1726 + 3797)))) then local v158=1651 -(1216 + 435);local v159;local v160;local v161;local v162;while true do if (((138 + 1187)==(5118 -3793)) and (v158==(1 + 0))) then v161=nil;v162=nil;v158=7 -(1 + 4);end if ((v158==(1 + 1)) or ((121 + 105 + 89)==(7454 -4651))) then while true do if ((v159==(1 + 0)) or ((481 + 1649)>=(4246 -(283 + (1022 -(587 + 98)))))) then local v221=0 + (0 -0);while true do if (((2067 -(12 + 76))>=(2940 -(700 + 941))) and (v221==(0 -0))) then v162={};v161=v9({},{__index=function(v258,v259)local v268=0 + 0;local v269;while true do if ((v268==(0 + 0)) or (((62 + 2252) -(538 + 126))==(5372 -(774 + 841)))) then v269=v162[v259];return v269[745 -(375 + 369)][v269[4 -(1497 -(187 + 1308))]];end end end,__newindex=function(v260,v261,v262)local v270=0 -0;local v271;local v272;local v273;while true do if (((2728 -(215 + 333))>(441 -338)) and (v270==((145 + 158) -(290 + 13)))) then v271=(0 -0) -0;v272=nil;v270=2 -1;end if ((((6089 -(173 + 321)) -(3252 -(240 + 449)))<=((5382 -2766) + (1940 -(264 + 519)))) and ((2 -1)==v270)) then v273=nil;while true do if ((v271==(1415 -(439 + 428 + 547))) or ((765 -(201 + 111))>=(257 + (5185 -3363)))) then while true do if ((v272==(0 -0)) or (4236<=(59 + 418))) then v273=v162[v261];v273[108 -(13 + 94)][v273[4 -(1 + 1)]]=v262;break;end end break;end if ((v271==(1232 -(577 + 655))) or ((734 + 169)<=(819 -542))) then v272=0 + (0 -0);v273=nil;v271=1 + 0;end end break;end end end});v221=1 + 0;end if (((2585 -(1810 + 144))<(4591 -(128 + 960))) and (1==v221)) then v159=1 + 1;break;end end end if (((653 + 3848)>=(848 + 427)) and (v159==(0 + 0))) then v160=v85[v92[5 -2]];v161=nil;v159=1585 -(606 + 978);end if ((v159==(839 -(684 + 153))) or (((22475 -16565) -(470 + 635))<(8647 -5366))) then for v229=1 + 0,v92[9 -5] do local v230=0 + 0 + 0;local v231;local v232;local v233;while true do if (((5145 -(470 + (2789 -2052)))>(1339 -(9 + 183))) and (v230==(0 -0))) then v231=14 -((841 -(693 + 137)) + 3);v232=nil;v230=743 -(584 + 158);end if (((472 -178)<(11507 -7719)) and (v230==(1280 -(388 + 891)))) then v233=nil;while true do if (((2232 -1405)<(15447 -11814)) and (v231==(289 -(72 + 217)))) then v232=0 + 0;v233=nil;v231=1;end if ((v231==((2 -1) + (0 -0))) or ((230 + 609)<=(2216 -(532 + (4478 -3321))))) then while true do if ((v232==(0 -0)) or ((3859 -1750)>(2224 + 907))) then local v283=74 -(7 + 67);while true do if ((4426>(120 + 1315)) and (v283==(890 -(802 + 87)))) then v232=1;break;end if ((v283==(1773 -(761 + 1012))) or ((5824 -(1006 + 834))<(1277 -(155 + 383)))) then v72=v72 + (1523 -(570 + 952));v233=v83[v72];v283=1 + 0;end end end if ((v232==(1 + 0)) or ((1358 + 1509)>=(6258 -(688 + 983)))) then if (((3565 -(1567 + 59))>=(1443 -(448 + (682 -(260 + 106))))) and (v233[(54 -(48 + 5)) + 0]==(1660 -(1612 + 26)))) then v162[v229-(1 + 0)]={v90,v233[1 + 2]};else v162[v229-(1 -0)]={v35,v233[6 -3]};end v89[ #v89 + (2 -1)]=v162;break;end end break;end end break;end end end v90[v92[1 + 1]]=v28(v160,v161,v36);break;end end break;end if ((v158==(1761 -(370 + 1391))) or (((9099 -(733 + 142)) -4270)>(3429 + 833))) then v159=0 + 0;v160=nil;v158=1 + 0;end end elseif ((v93>(14 + (201 -(98 + 92)))) or (888<(52 -39))) then v90[v92[1978 -(964 + 1012)]]=v28(v85[v92[11 -8]],nil,v36);else local v188=(2168 -(289 + 316)) -(221 + 1342);local v189;local v190;local v191;local v192;while true do if (((2377 + 1495)<4186) and (v188==(109 -(31 + 76)))) then while true do if (((2697 -(509 + 381))<=(12455 -8733)) and (v189==(0 + 0))) then local v241=0 -0;while true do if (((644 -(276 + 368))==v241) or ((2790 -(243 + 1436))>(19582 -15051))) then v190=v92[1 + 1];v191={v90[v190](v12(v90,v190 + 1 + 0,v92[(1356 + 467) -(689 + 1131)]))};v241=1 + 0;end if (((3 -2)==v241) or ((4 -0)>=((2060 + 6239) -4585))) then v189=2 -1;break;end end end if ((v189==(1987 -(1579 + (1882 -(584 + 891))))) or ((6370 -4517)>2750)) then v192=1612 -(991 + 621);for v250=v190,v92[3 + 1] do local v251=0 -0;local v252;local v253;while true do if ((v251==1) or (((9288 -5693) -(213 + 1376))>((14564 -10501) -(898 + 136)))) then while true do if (((6159 -1198)==(17146 -(13464 -(449 + 830)))) and (((2270 -1673) -(393 + 204))==v252)) then v253=(942 + 137) -(859 + 220);while true do if (((5863 -3345)<(3115 -(84 + 467))) and (v253==(0 + 0))) then v192=v192 + 1;v90[v250]=v191[v192];break;end end break;end end break;end if (((4829 -(47 + 47))>(3344 + 447)) and (v251==(1473 -(1148 + 325)))) then v252=0 -0;v253=nil;v251=1 + 0;end end end break;end end break;end if ((v188==(0 + 0 + 0)) or ((1678 + 1775)<(3772 -(437 + 492)))) then v189=0 + 0;v190=nil;v188=1 + 0;end if (((2958 -(1115 + 8))>=(91 + 323)) and (v188==(1 + 0))) then v191=nil;v192=nil;v188=545 -(416 + 127);end end end elseif ((v93<=(9 + 21)) or ((1111 + 1206)>(5463 -(413 + 375)))) then if ((v93<=(3 + 25)) or ((4303 -(506 + (631 -(7 + 57))))==(2322 + 1740))) then if (((2974 -(45 + 458))>=(24 + 61)) and (v93>(1877 -(706 + 1144)))) then v90[v92[2 + 0 + 0]]={};else do return v90[v92[949 -((2104 -(223 + 1740)) + 806)]];end end elseif ((v93==(932 -(260 + 643))) or ((998 -(302 + 566))>=(2487 + 1040))) then v90[v92[2 -0]]=v90[v92[557 -(450 + 104)]][v90[v92[10 -(2 + 4)]]];elseif (v90[v92[(405 + 64) -(51 + 416)]] or ((2294 -(8 + 306))<=(122 + 347))) then v72=v72 + (1336 -(1101 + 234));else v72=v92[4 -1];end elseif ((v93<=((3116 -1638) -(1192 + 254))) or ((2478 + 907)==((2442 -(11 + 117)) -(305 + 73)))) then if ((v93>(1286 -(302 + 953))) or (2740>((6747 -(8 + 2)) -(347 + 1408)))) then local v165=0 + 0;local v166;local v167;while true do if (((5003 -2514)>=(9040 -6870)) and (v165==(314 -(282 + (174 -(122 + 21)))))) then while true do if (((2180 -(1544 + 288))==348) and (v166==((1577 + 292) -((1356 -(8 + 527)) + 1048)))) then v167=v92[(2 + 1) -1];v90[v167]=v90[v167](v12(v90,v167 + 1 + 0,v92[10 -7]));break;end end break;end if (((0 + 0)==v165) or ((696 + 1926)>=(2708 + 563))) then v166=0 + 0;v167=nil;v165=1188 -(1012 + 175);end end else v36[v92[2 + 1]]=v90[v92[5 -3]];end elseif (((8724 -5744)>490) and (v93<=(21 + 12))) then v90[v92[802 -(765 + 35)]][v90[v92[2 + 1]]]=v92[937 -(719 + 214)];elseif (((5570 -(1415 + 132))<=((6184 -(11 + 13)) -(319 + 1333))) and (v93==(8 + 26))) then v90[v92[5 -3]][v92[798 -(759 + 36)]]=v92[9 -5];else local v194=0 -0;local v195;while true do if ((95>=(41 + 4)) and ((808 -(682 + 126))==v194)) then v195=v92[202 -(50 + 150)];v90[v195](v90[v195 + (1 -0)]);break;end end end v72=v72 + (1308 -(710 + 547 + 50));break;end if (((3659 -(468 + 1413))<=(2667 -(87 + 410))) and (v95==(0 + (0 -0)))) then v92=v83[v72];v93=v92[3 -2];v95=1 -0;end end end end v71=3;end end end;end end end return v28(v27(),{},v16)();end v14("LOL!203O00028O00026O001440030F3O00612O64412O636F757472656D656E74030A3O0072656D6F766544617461026O001840027O004003043O0067616D65030A3O0047657453657276696365030B3O00482O747053657276696365026O00084003173O00726278612O73657469643A2O2F36353039362O31343935026O00F03F03173O00726278612O73657469643A2O2F2O372O35383933362O35030F3O0077656C64412O746163686D656E7473026O00104003093O00436861726163746572030C3O0057616974466F724368696C6403083O0048756D616E6F696403023O005F47030C3O005461726765744973537461722O01030B3O00446973706C61794E616D652O033O005B3F5D030E3O00546172676574557365726E616D6503133O0054617267657449735374617243726561746F7203043O005B2O3F5D030D3O00546172676574497341646D696E03093O007365744F757466697403073O00506C617965727303163O0047657455736572496446726F6D4E616D654173796E63030E3O0046696E6446697273744368696C6403193O00506C617965725468617457692O6C416374417354617267657400783O0012023O00014O00170001000C3O00264O000E000100020004013O000E0001000618000C3O000100012O00163O000C3O000618000D0001000100022O00163O000C4O00163O000B3O00121F000D00033O000618000D0002000100012O00163O00083O00121F000D00043O0012023O00053O00264O0019000100060004013O0019000100021A000600033O00120D000D00073O00200C000D000D0008001202000F00094O0020000D000F00022O00160007000D4O001C000D6O00160008000D3O0012023O000A3O00264O00260001000A0004013O002600012O0016000D00063O001202000E000B4O0013000D0002000200200A0009000D000C2O0016000D00063O001202000E000D4O0013000D0002000200200A000A000D000C00021A000D00043O00121F000D000E3O0012023O000F3O00264O004F0001000C0004013O004F000100200A00040003001000200C000D00040011001202000F00124O0020000D000F00022O00160005000D3O00120D000D00133O00200A000D000D001400262O000D0037000100150004013O00370001001202000D00173O00120D000E00133O00200A000E000E00182O0007000D000D000E00100300050016000D0004013O004E000100120D000D00133O00200A000D000D001900262O000D0041000100150004013O00410001001202000D001A3O00120D000E00133O00200A000E000E00182O0007000D000D000E00100300050016000D0004013O004E000100120D000D00133O00200A000D000D001B00262O000D004B000100150004013O004B0001001202000D001A3O00120D000E00133O00200A000E000E00182O0007000D000D000E00100300050016000D0004013O004E000100120D000D00133O00200A000D000D001800100300050016000D0012023O00063O000E0B000F005500013O0004013O005500012O0017000B000B3O00021A000B00054O0017000C000C3O0012023O00023O00264O0063000100050004013O00630001000618000D0006000100052O00163O00014O00163O00074O00163O00084O00163O000A4O00163O00093O00121F000D001C3O00120D000D001C4O0016000E00024O0016000F00044O0009000D000F00010004013O00760001000E0B0001000200013O0004013O0002000100120D000D00073O00200C000D000D0008001202000F001D4O0020000D000F00022O00160001000D3O00200C000D0001001E00120D000F00133O00200A000F000F00182O0020000D000F00022O00160002000D3O00200C000D0001001F00120D000F00133O00200A000F000F00202O0020000D000F00022O00160003000D3O0012023O000C3O0004013O000200012O00048O00153O00013O00073O00083O0003053O007061697273030B3O004765744368696C6472656E2O033O00497341030A3O00412O746163686D656E7403043O004E616D65030C3O00412O636F757472656D656E7403043O00542O6F6C028O00022A3O00120D000200013O00200C00033O00022O0012000300044O000600023O00040004013O0027000100200C000700060003001202000900044O002000070009000200061E0007000F00013O0004013O000F000100200A0007000600050006140007000F000100010004013O000F00012O001B000600023O0004013O0027000100200C000700060003001202000900064O002000070009000200061100070027000100010004013O0027000100200C000700060003001202000900074O002000070009000200061100070027000100010004013O00270001001202000700084O0017000800083O00262O0007001B000100080004013O001B00012O000500096O0016000A00064O0016000B00014O00200009000B00022O0016000800093O00061E0008002700013O0004013O002700012O001B000800023O0004013O002700010004013O001B000100060E00020005000100020004013O000500012O00153O00017O002A3O00123O00123O00123O00123O00123O00133O00133O00133O00133O00133O00133O00133O00133O00143O00143O00153O00153O00153O00153O00153O00153O00153O00153O00153O00153O00163O00173O00193O00193O001A3O001A3O001A3O001A3O001A3O001B3O001B3O001C3O001E3O001F3O00123O00213O00233O000F3O0003063O00506172656E74030E3O0046696E6446697273744368696C6403063O0048616E646C65028O0003153O0046696E6446697273744368696C644F66436C612O73030A3O00412O746163686D656E7403043O004E616D65030F3O0077656C64412O746163686D656E7473026O00F03F03043O004865616403063O00434672616D652O033O006E6577026O00E03F030F3O00412O746163686D656E74506F696E7403083O004865616457656C6402653O001003000100013O00200C000200010002001202000400034O002000020004000200061E0002006400013O0004013O00640001001202000300044O0017000400043O00262O00030008000100040004013O0008000100200C000500020005001202000700064O00200005000700022O0016000400053O00061E0004002200013O0004013O00220001001202000500044O0017000600063O00262O00050012000100040004013O001200012O000500076O001600085O00200A0009000400072O00200007000900022O0016000600073O00061E0006006400013O0004013O0064000100120D000700084O0016000800064O0016000900044O00090007000900010004013O006400010004013O001200010004013O00640001001202000500044O0017000600073O00262O0005005C000100090004013O005C000100262O00060026000100040004013O0026000100200C00083O0002001202000A000A4O00200008000A00022O0016000700083O00061E0007006400013O0004013O00640001001202000800044O00170009000B3O00262O00080053000100090004013O005300012O0017000B000B3O000E0B00040046000100090004013O00460001001202000C00043O00262O000C003A000100090004013O003A0001001202000900093O0004013O0046000100262O000C0036000100040004013O0036000100120D000D000B3O00200A000D000D000C001202000E00043O001202000F000D3O001202001000044O0020000D001000022O0016000A000D3O00200A000B0001000E001202000C00093O0004013O0036000100262O00090033000100090004013O003300012O0005000C00013O001202000D000F4O0016000E00074O0016000F00074O0016001000024O00160011000A4O00160012000B4O0009000C001200010004013O006400010004013O003300010004013O0064000100262O00080030000100040004013O00300001001202000900044O0017000A000A3O001202000800093O0004013O003000010004013O006400010004013O002600010004013O0064000100262O00050024000100040004013O00240001001202000600044O0017000700073O001202000500093O0004013O002400010004013O006400010004013O000800012O00153O00017O00653O00253O00263O00263O00263O00273O00273O00283O00293O002B3O002B3O002C3O002C3O002C3O002C3O002D3O002D3O002E3O002F3O00313O00313O00323O00323O00323O00323O00323O00333O00333O00343O00343O00343O00343O00363O00373O00383O003A3O003B3O003E3O003E3O00403O00403O00413O00413O00413O00413O00423O00423O00433O00443O00483O00483O00493O004B3O004B3O004C3O004E3O004E3O004F3O00503O00523O00523O00533O00533O00533O00533O00533O00533O00533O00543O00553O00563O00593O00593O005A3O005A3O005A3O005A3O005A3O005A3O005A3O005A3O005B3O005C3O005E3O00603O00603O00613O00623O00633O00643O00673O00683O006A3O006C3O006C3O006D3O006E3O006F3O00703O00733O00743O00773O00063O00028O00026O00F03F00030A3O0046616B65506C6179657203053O007063612O6C03093O005265616C4C6162656C01394O000500016O001D000100013O00061E0001003800013O0004013O00380001001202000100014O0017000200023O00262O00010006000100010004013O00060001001202000200013O00262O0002000E000100020004013O000E00012O000500035O00202100033O00030004013O0038000100262O00020009000100010004013O00090001001202000300013O00262O00030030000100010004013O003000012O000500046O001D000400043O00200A00040004000400061E0004002500013O0004013O00250001001202000400013O000E0B00010019000100040004013O0019000100120D000500053O00061800063O000100022O00058O00168O00230005000200012O000500056O001D000500053O0030220005000400030004013O002500010004013O001900012O000500046O001D000400043O00200A00040004000600061E0004002F00013O0004013O002F000100120D000400053O00061800050001000100022O00058O00168O0023000400020001001202000300023O00262O00030011000100020004013O00110001001202000200023O0004013O000900010004013O001100010004013O000900010004013O003800010004013O000600012O00153O00013O00023O00023O00030A3O0046616B65506C6179657203073O0044657374726F7900074O00058O0005000100014O001D5O000100200A5O000100200C5O00022O00233O000200012O00153O00017O00073O008D3O008D3O008D3O008D3O008D3O008D3O008E3O00033O0003093O005265616C4C6162656C03073O0056697369626C652O0100064O00058O0005000100014O001D5O000100200A5O00010030223O000200032O00153O00017O00063O00963O00963O00963O00963O00963O00973O00393O00793O00793O00793O00793O007A3O007B3O007D3O007D3O007E3O00803O00803O00813O00813O00823O00843O00843O00853O00873O00873O00883O00883O00883O00883O00883O00893O008B3O008B3O008C3O008E3O008E3O008E3O008C3O008F3O008F3O008F3O00903O00913O00943O00943O00943O00943O00943O00953O00973O00973O00973O00953O00993O009B3O009B3O009C3O009D3O009E3O00A03O00A23O00A33O00A63O00083O00028O00026O00F03F03043O0067616D65030A3O0047657453657276696365030D3O00496E7365727453657276696365030E3O004C6F61644C6F63616C412O73657403053O007461626C6503063O00696E7365727401393O001202000100014O0017000200033O000E0B00020032000100010004013O00320001001202000400013O00262O00040005000100010004013O0005000100262O0002000A000100020004013O000A00012O001B000300023O00262O00020004000100010004013O00040001001202000500013O00262O00050011000100020004013O00110001001202000200023O0004013O0004000100262O0005000D000100010004013O000D00012O001C00066O0016000300063O00061E3O002C00013O0004013O002C0001001202000600014O0017000700073O00262O00060019000100010004013O0019000100120D000800033O00200C000800080004001202000A00054O00200008000A000200200C0008000800062O0016000A6O00200008000A00022O0016000700083O00061E0007002C00013O0004013O002C000100120D000800073O00200A0008000800082O0016000900034O0016000A00074O00090008000A00010004013O002C00010004013O00190001001202000500023O0004013O000D00010004013O000400010004013O000500010004013O000400010004013O0038000100262O00010002000100010004013O00020001001202000200014O0017000300033O001202000100023O0004013O000200012O00153O00017O00393O00AB3O00AC3O00AF3O00AF3O00B13O00B33O00B33O00B43O00B43O00B53O00B73O00B73O00B83O00BA3O00BA3O00BB3O00BC3O00BE3O00BE3O00BF3O00BF3O00C03O00C03O00C13O00C23O00C43O00C43O00C53O00C53O00C53O00C53O00C53O00C53O00C53O00C53O00C63O00C63O00C73O00C73O00C73O00C73O00C73O00C93O00CA3O00CD3O00CE3O00D13O00D23O00D33O00D53O00D73O00D73O00D83O00D93O00DA3O00DB3O00DD3O000D3O00028O00027O004003023O00433103063O00434672616D6503063O00506172656E74026O00084003083O00496E7374616E63652O033O006E657703043O0057656C6403053O005061727430026O00F03F03053O00506172743103023O004330021F3O001202000200014O0017000300033O00262O00020009000100020004013O0009000100200A00040001000400100300030003000400200A00043O0005001003000300050004001202000200063O00262O00020013000100010004013O0013000100120D000400073O00200A000400040008001202000500094O00130004000200022O0016000300043O00200A00043O00050010030003000A00040012020002000B3O00262O0002001A0001000B0004013O001A000100200A0004000100050010030003000C000400200A00043O00040010030003000D0004001202000200023O00262O00020002000100060004013O000200012O001B000300023O0004013O000200012O00153O00017O001F3O00E63O00E73O00E93O00E93O00EA3O00EA3O00EB3O00EB3O00EC3O00EE3O00EE3O00EF3O00EF3O00EF3O00EF3O00EF3O00F03O00F03O00F13O00F33O00F33O00F43O00F43O00F53O00F53O00F63O00F83O00F83O00F93O00FA3O00FC3O000D3O00028O00026O00F03F03053O00506172743003053O005061727431027O0040026O00084003063O00506172656E7403083O00496E7374616E63652O033O006E657703043O0057656C6403043O004E616D6503023O00433003023O004331061B3O001202000600014O0017000700073O00262O00060007000100020004013O00070001001003000700030002001003000700040003001202000600053O00262O0006000B000100060004013O000B00010010030007000700012O001B000700023O00262O00060014000100010004013O0014000100120D000800083O00200A0008000800090012020009000A4O00130008000200022O0016000700083O0010030007000B3O001202000600023O00262O00060002000100050004013O000200010010030007000C00040010030007000D0005001202000600063O0004013O000200012O00153O00017O001B3O0010012O0011012O0013012O0013012O0014012O0015012O0016012O0018012O0018012O0019012O001A012O001C012O001C012O001D012O001D012O001D012O001D012O001D012O001E012O001F012O0021012O0021012O0022012O0023012O0024012O0025012O0027012O00483O00028O0003053O007063612O6C031B3O00476574436861726163746572412O70656172616E63654173796E6303043O0067616D6503073O00482O747047657403223O00682O7470733A2O2F75736572732E726F626C6F782E636F6D2F76312F75736572732F026O00F03F030A3O004A534F4E4465636F6465027O004003043O006E657874030B3O004765744368696C6472656E03043O004E616D6503083O00523135466978656403043O00456E756D030F3O0048756D616E6F6964526967547970652O033O00523135030E3O0046696E6446697273744368696C6403083O0048756D616E6F696403123O005265706C616365426F647950617274523135030B3O00426F64795061727452313503023O0052362O033O00497341030D3O004368617261637465724D65736803063O00506172656E74030B3O00426F647920436F6C6F727303073O0044657374726F7903043O006661636503093O00412O63652O736F727903043O0048656164030F3O00612O64412O636F757472656D656E7403053O0050616E747303053O005368697274030C3O0053686972744772617068696303163O00476574506C6179657246726F6D436861726163746572026O000840026O00104003083O0046616B654E616D65030B3O00446973706C61794E616D65030F3O0046616B65446973706C61794E616D6503063O00557365724964030A3O0046616B65557365724964030A3O0046616B65506C61796572026O00144003043O0077616974029A5O99B93F026O00E83F03043O004D65736803083O00496E7374616E63652O033O006E657703043O0057656C6403053O00506172743003053O005061727431030C3O005472616E73706172656E637903053O004D6F64656C03083O0046616B654865616403053O00436C6F6E6503153O0046696E6446697273744368696C644F66436C612O73030B3O005370656369616C4D657368030B3O00566572746578436F6C6F7203073O00566563746F723303083O004D6573685479706503063O004F2O6673657403053O005363616C65026O00F43F030A3O0072656D6F76654461746103043O006E616D65030B3O00646973706C61794E616D6503023O00696403193O0046616B65436861726163746572412O70656172616E6365496403063O00506C6179657203073O005269675479706503053O0070616972730206022O001202000200014O0017000300053O00262O00020014000100010004013O0014000100120D000600024O000500075O00200A0007000700032O000500086O001600096O00190006000900072O0016000400074O0016000300063O00120D000600043O00200C000600060005001202000800064O001600096O00070008000800092O00200006000800022O0016000500063O001202000200073O00262O00020002000100070004013O000200012O0005000600013O00200C0006000600082O0016000800054O00200006000800022O0016000500063O00061E0003000502013O0004013O0005020100061E0004000502013O0004013O00050201001202000600014O00170007000A3O00262O000600C1000100090004013O00C1000100120D000B000A3O00200C000C0004000B2O0008000C0002000D0004013O00870001001202001000013O00262O0010005A000100010004013O005A000100200A0011000F000C00262O001100450001000D0004013O0045000100120D0011000E3O00200A00110011000F00200A00110011001000061400070045000100110004013O0045000100120D0011000A3O00200C0012000F000B2O00080012000200130004013O0043000100200C001600010011001202001800124O002000160018000200061E0016004300013O0004013O0043000100200A00160001001200200C00160016001300120D0018000E3O00200A00180018001400200A00190015000C2O001D0018001800192O0016001900154O000900160019000100060E00110036000100020004013O0036000100200A0011000F000C00262O00110059000100150004013O0059000100120D0011000E3O00200A00110011000F00200A00110011001500061400070059000100110004013O0059000100120D0011000A3O00200C0012000F000B2O00080012000200130004013O0057000100200C001600150016001202001800174O002000160018000200061E0016005700013O0004013O0057000100100300150018000100060E00110051000100020004013O00510001001202001000073O00262O00100028000100070004013O0028000100200A0011000F000C00262O00110086000100190004013O00860001001202001100014O0017001200123O00262O00110061000100010004013O00610001001202001200013O000E0B00070068000100120004013O00680001001003000F001800010004013O0086000100262O00120064000100010004013O00640001001202001300013O00262O0013006F000100070004013O006F0001001202001200073O0004013O0064000100262O0013006B000100010004013O006B000100200C001400010011001202001600194O002000140016000200061E0014007900013O0004013O0079000100200A00140001001900200C00140014001A2O002300140002000100120D001400023O00061800153O000100032O00163O00074O00163O00014O00163O000F4O0023001400020001001202001300073O0004013O006B00010004013O006400010004013O008600010004013O006100010004013O008600010004013O002800012O0004000E5O00060E000B0027000100020004013O0027000100120D000B000A3O00200C000C0004000B2O0008000C0002000D0004013O00B4000100200A0010000F000C00262O001000950001001B0004013O0095000100120D001000023O00061800110001000100022O00163O000F4O00163O00014O002300100002000100200C0010000F00160012020012001C4O002000100012000200061E001000A300013O0004013O00A3000100200C0010000100110012020012001D4O002000100012000200061E001000A300013O0004013O00A3000100120D0010001E4O0016001100014O00160012000F4O000900100012000100200C0010000F00160012020012001F4O0020001000120002000611001000B2000100010004013O00B2000100200C0010000F0016001202001200204O0020001000120002000611001000B2000100010004013O00B2000100200C0010000F0016001202001200214O002000100012000200061E001000B300013O0004013O00B30001001003000F001800012O0004000E5O00060E000B008D000100020004013O008D000100120D000B00023O000618000C0002000100022O00163O00074O00163O00014O0023000B000200012O0005000B5O00200C000B000B00222O0016000D00014O0020000B000D00022O00160008000B3O001202000600233O00262O000600CD000100240004013O00CD000100200A000B000A00250010030009000C000B00200A000B000A002700100300090026000B00200A000B000A002900100300090028000B2O0005000B00024O001D000B000B0008001003000B002A00090012020006002B3O000E0B000700912O0100060004013O00912O0100120D000B002C3O001202000C002D4O0023000B0002000100200C000B00040011001202000D001B4O0020000B000D0002000611000B00DB000100010004013O00DB000100120D000B00023O000618000C0003000100012O00163O00014O0023000B0002000100120D000B002C3O001202000C002E4O0023000B0002000100200C000B00040011001202000D002F4O0020000B000D000200061E000B00382O013O0004013O00382O0100120D000B000E3O00200A000B000B000F00200A000B000B0010000614000700212O01000B0004013O00212O01001202000B00014O0017000C00103O00262O000B00F6000100090004013O00F60001001003000F0018000D00120D001100303O00200A001100110031001202001200324O00130011000200022O0016001000113O00200A00110001001D00100300100033001100100300100034000F001202000B00233O000E0B000100022O01000B0004013O00022O0100200A00110001001D00302200110035000700200A000C0004002F00120D001100303O00200A001100110031001202001200364O00130011000200022O0016000D00113O003022000D000C0037001202000B00073O00262O000B000F2O0100230004013O000F2O0100100300100018000F00200A0011000F002F00200C00110011001A2O0023001100020001001003000C0018000F00120D001100023O00061800120004000100022O00163O00014O00163O000E4O00230011000200010004013O001F2O0100262O000B00EA000100070004013O00EA000100200A00110001001D001003000D0018001100200A00110001001200200C0011001100382O00130011000200022O0016000E00113O001003000E0018000D2O0005001100033O00200A00110011001D00200C0011001100382O00130011000200022O0016000F00113O001202000B00093O0004013O00EA00012O0004000B5O0004013O00902O01001202000B00014O0017000C000D3O00262O000B00312O0100070004013O00312O0100200C000E000D00390012020010003A4O0020000E0010000200061E000E002F2O013O0004013O002F2O0100200C000E000D00390012020010003A4O0020000E0010000200200C000E000E001A2O0023000E00020001001003000C0018000D0004013O00902O0100262O000B00232O0100010004013O00232O0100200A000C0004002F00200A000D0001001D001202000B00073O0004013O00232O010004013O00902O0100120D000B000E3O00200A000B000B000F00200A000B000B0015000614000700902O01000B0004013O00902O01001202000B00014O0017000C000E3O000E0B0007008A2O01000B0004013O008A2O012O0017000E000E3O00262O000C004D2O0100230004013O004D2O0100120D000F003C3O00200A000F000F0031001202001000073O001202001100073O001202001200074O0020000F00120002001003000E003B000F001003000E0018000D0004013O00902O0100262O000C00592O0100070004013O00592O0100120D000F00303O00200A000F000F00310012020010003A4O0013000F000200022O0016000E000F3O00120D000F000E3O00200A000F000F003D00200A000F000F001D001003000E003D000F001202000C00093O00262O000C00722O0100090004013O00722O01001202000F00013O00262O000F00602O0100070004013O00602O01001202000C00233O0004013O00722O0100262O000F005C2O0100010004013O005C2O0100120D0010003C3O00200A001000100031001202001100013O001202001200013O001202001300014O0020001000130002001003000E003E001000120D0010003C3O00200A001000100031001202001100403O001202001200403O001202001300404O0020001000130002001003000E003F0010001202000F00073O0004013O005C2O01000E0B000100422O01000C0004013O00422O01001202000F00013O00262O000F00832O0100010004013O00832O0100200A000D0001001D00200C0010000D00390012020012003A4O002000100012000200061E001000822O013O0004013O00822O0100200C0010000D00390012020012003A4O002000100012000200200C00100010001A2O0023001000020001001202000F00073O00262O000F00752O0100070004013O00752O01001202000C00073O0004013O00422O010004013O00752O010004013O00422O010004013O00902O0100262O000B003F2O0100010004013O003F2O01001202000C00014O0017000D000D3O001202000B00073O0004013O003F2O01001202000600093O000E0B002300A92O0100060004013O00A92O0100120D000B00414O0016000C00084O0023000B000200012O0005000B00024O001C000C3O000400200A000D00050042001003000C0025000D00200A000D00050043001003000C0027000D00200A000D00050044001003000C0029000D00200A000D00050044001003000C0045000D2O000F000B0008000C00120D000B00303O00200A000B000B0031001202000C00464O0013000B000200022O00160009000B4O0005000B00024O001D000A000B0008001202000600243O00262O000600AE2O01002B0004013O00AE2O012O0005000B5O00100300090018000B0004013O002O020100262O00060021000100010004013O0021000100200A000B0001001200200A0007000B004700120D000B00483O00200C000C0001000B2O0012000C000D4O0006000B3O000D0004013O00CD2O0100200C0010000F00160012020012001C4O0020001000120002000611001000CB2O0100010004013O00CB2O0100200C0010000F0016001202001200204O0020001000120002000611001000CB2O0100010004013O00CB2O0100200C0010000F00160012020012001F4O0020001000120002000611001000CB2O0100010004013O00CB2O0100200C0010000F0016001202001200214O002000100012000200061E001000CD2O013O0004013O00CD2O0100200C0010000F001A2O002300100002000100060E000B00B72O0100020004013O00B72O0100200C000B00010011001202000D001D4O0020000B000D000200061E000B00DE2O013O0004013O00DE2O0100200A000B0001001D00200C000B000B0011001202000D001B4O0020000B000D000200061E000B00DE2O013O0004013O00DE2O0100200A000B0001001D00200A000B000B001B00200C000B000B001A2O0023000B0002000100120D000B000E3O00200A000B000B000F00200A000B000B0010000614000700F32O01000B0004013O00F32O0100120D000B000A4O0005000C00043O00200C000C000C00382O0013000C0002000200200C000C000C000B2O0008000C0002000D0004013O00F02O0100120D001000023O00061800110005000100022O00163O00014O00163O000F4O00230010000200012O0004000E5O00060E000B00EA2O0100020004013O00EA2O010004014O00020100120D000B000A3O00200C000C0001000B2O0008000C0002000D0004013O00FE2O0100200C0010000F0016001202001200174O002000100012000200061E001000FE2O013O0004013O00FE2O0100200C0010000F001A2O002300100002000100060E000B00F72O0100020004013O00F72O01001202000600073O0004013O002100012O000400065O0004013O000502010004013O000200012O00153O00013O00063O00083O0003043O00456E756D030F3O0048756D616E6F6964526967547970652O033O0052313503043O0048656164030E3O0046696E6446697273744368696C6403083O0046616B654865616403053O00436C6F6E6503063O00506172656E7400154O00057O00120D000100013O00200A00010001000200200A0001000100030006143O0014000100010004013O001400012O00053O00013O00200A5O000400200C5O0005001202000200064O00203O0002000200061E3O001400013O0004013O001400012O00053O00023O00200C5O00072O00133O000200022O0005000100013O00200A00010001000400200A0001000100060010033O000800012O00153O00017O00153O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0071012O0072012O0072012O0072012O0072012O0072012O0072012O0072012O0074012O00023O0003063O00506172656E7403043O004865616400054O00058O0005000100013O00200A0001000100020010033O000100012O00153O00017O00053O0085012O0085012O0085012O0085012O0086012O000D3O0003043O00456E756D030F3O0048756D616E6F6964526967547970652O033O0052313503043O0048656164030E3O0046696E6446697273744368696C6403083O0046616B6548656164028O0003153O0046696E6446697273744368696C644F66436C612O7303053O00446563616C03053O00436C6F6E6503063O00506172656E74030C3O005472616E73706172656E6379026O00F03F00254O00057O00120D000100013O00200A00010001000200200A0001000100030006143O0024000100010004013O002400012O00053O00013O00200A5O000400200C5O0005001202000200064O00203O0002000200061E3O002400013O0004013O002400010012023O00073O00264O000E000100070004013O000E00012O0005000100013O00200A00010001000400200C000100010008001202000300094O002000010003000200200C00010001000A2O00130001000200022O0005000200013O00200A00020002000400200A00020002000600200A0002000200040010030001000B00022O0005000100013O00200A00010001000400200C000100010008001202000300094O00200001000300020030220001000C000D0004013O002400010004013O000E00012O00153O00017O00253O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0092012O0093012O0095012O0095012O0096012O0096012O0096012O0096012O0096012O0096012O0096012O0096012O0096012O0096012O0096012O0096012O0097012O0097012O0097012O0097012O0097012O0097012O0098012O0099012O009C012O000E3O00028O00026O00F03F03043O004661636503053O0046726F6E7403043O004E616D6503043O0066616365027O004003063O00506172656E7403043O004865616403083O00496E7374616E63652O033O006E657703053O00446563616C03073O0054657874757265031C3O00726278612O7365743A2O2F74657874757265732F666163652E706E6700313O0012023O00014O0017000100023O00264O002A000100020004013O002A000100262O00010011000100020004013O00110001001202000300013O00262O0003000C000100010004013O000C0001003022000200030004003022000200050006001202000300023O00262O00030007000100020004013O00070001001202000100073O0004013O001100010004013O00070001000E0B00070017000100010004013O001700012O000500035O00200A0003000300090010030002000800030004013O0030000100262O00010004000100010004013O00040001001202000300013O000E0B00010023000100030004013O0023000100120D0004000A3O00200A00040004000B0012020005000C4O00130004000200022O0016000200043O0030220002000D000E001202000300023O000E0B0002001A000100030004013O001A0001001202000100023O0004013O000400010004013O001A00010004013O000400010004013O0030000100264O0002000100010004013O00020001001202000100014O0017000200023O0012023O00023O0004013O000200012O00153O00017O00313O00AB012O00AC012O00AF012O00AF012O00B1012O00B1012O00B2012O00B4012O00B4012O00B5012O00B6012O00B7012O00B9012O00B9012O00BA012O00BB012O00BC012O00BF012O00BF012O00C0012O00C0012O00C0012O00C1012O00C3012O00C3012O00C4012O00C6012O00C6012O00C7012O00C7012O00C7012O00C7012O00C7012O00C8012O00C9012O00CB012O00CB012O00CC012O00CD012O00CE012O00D0012O00D2012O00D4012O00D4012O00D5012O00D6012O00D7012O00D8012O00DA012O00033O0003083O0048756D616E6F6964030D3O004865616C74684368616E67656403073O00436F2O6E65637400084O00057O00200A5O000100200A5O000200200C5O000300061800023O000100012O00053O00014O00093O000200012O00153O00013O00013O00013O0003063O004865616C746801034O000500015O001003000100014O00153O00017O00033O00FA012O00FA012O00FB012O00083O00F9012O00F9012O00F9012O00F9012O00FB012O00FB012O00F9012O00FC012O00053O0003083O0048756D616E6F696403123O005265706C616365426F64795061727452313503043O00456E756D030B3O00426F64795061727452313503043O004E616D65000B4O00057O00200A5O000100200C5O000200120D000200033O00200A0002000200042O0005000300013O00200A0003000300052O001D0002000200032O0005000300014O00093O000300012O00153O00017O000B3O006F022O006F022O006F022O006F022O006F022O006F022O006F022O006F022O006F022O006F022O0070022O0006022O002D012O002E012O0032012O0032012O0033012O0033012O0033012O0033012O0033012O0033012O0033012O0033012O0034012O0034012O0034012O0034012O0034012O0034012O0034012O0035012O0037012O0037012O0038012O0038012O0038012O0038012O0038012O0039012O0039012O0039012O0039012O003A012O003B012O0040012O0040012O0041012O0041012O0041012O0041012O0042012O0044012O0044012O0045012O0045012O0045012O0046012O0046012O0046012O0046012O0046012O0047012O0047012O0047012O0047012O0048012O0048012O0048012O0048012O0048012O0049012O0049012O0049012O0049012O0049012O0049012O0049012O0049012O0047012O004A012O004E012O004E012O004E012O004F012O004F012O004F012O004F012O004F012O0050012O0050012O0050012O0050012O0051012O0051012O0051012O0051012O0051012O0052012O0050012O0053012O0057012O0059012O0059012O005A012O005A012O005A012O005B012O005C012O005E012O005E012O005F012O0061012O0061012O0062012O0063012O0065012O0065012O0066012O0068012O0068012O0069012O006A012O006C012O006C012O006D012O006D012O006D012O006D012O006D012O006E012O006E012O006E012O0070012O0074012O0074012O0074012O0074012O0070012O0075012O0076012O0078012O007A012O007B012O007E012O007F012O0080012O0041012O0080012O0082012O0082012O0082012O0082012O0083012O0083012O0083012O0084012O0086012O0086012O0086012O0084012O0088012O0088012O0088012O0088012O0088012O0089012O0089012O0089012O0089012O0089012O008A012O008A012O008A012O008A012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008D012O008E012O008F012O0082012O008F012O0091012O009C012O009C012O009C012O0091012O009D012O009D012O009D012O009D012O009D012O009E012O00A0012O00A0012O00A1012O00A1012O00A2012O00A2012O00A3012O00A3012O00A4012O00A4012O00A4012O00A5012O00A7012O00A7012O00A8012O00A8012O00A8012O00A9012O00A9012O00A9012O00A9012O00A9012O00AA012O00DA012O00DA012O00AA012O00DC012O00DC012O00DC012O00DD012O00DD012O00DD012O00DD012O00DD012O00DE012O00DE012O00DE012O00DE012O00DE012O00DF012O00E0012O00E6012O00E6012O00E7012O00E8012O00E8012O00E8012O00E8012O00E8012O00E9012O00E9012O00EA012O00EB012O00ED012O00ED012O00EE012O00EE012O00EF012O00F0012O00F0012O00F0012O00F0012O00F0012O00F1012O00F2012O00F4012O00F4012O00F5012O00F6012O00F6012O00F6012O00F7012O00F8012O00FC012O00FC012O00FC012O00F8012O00FD012O00FF012O00FF013O00023O00022O0001022O0001022O0001022O0001022O002O022O0003022O0003022O0003022O0003022O0003022O0004022O0005022O0006022O0006022O0008022O0009022O000C022O000C022O000D022O000D022O000D022O000D022O000D022O000E022O000E022O000E022O000E022O000E022O0010022O0011022O0013022O0013022O0014022O0015022O0016022O0017022O0019022O001A022O001A022O001A022O001A022O001A022O001B022O001C022O0020022O0020022O0021022O0023022O0023022O0024022O0024022O0024022O0024022O0024022O0024022O0024022O0025022O0026022O0028022O0028022O0029022O0029022O0029022O0029022O0029022O002A022O002A022O002A022O002A022O002B022O002D022O002D022O002E022O0030022O0030022O0031022O0032022O0034022O0034022O0035022O0035022O0035022O0035022O0035022O0035022O0035022O0036022O0036022O0036022O0036022O0036022O0036022O0036022O0037022O0038022O003B022O003B022O003C022O003E022O003E022O003F022O0040022O0040022O0040022O0040022O0040022O0041022O0041022O0041022O0041022O0041022O0043022O0045022O0045022O0046022O0047022O0048022O004A022O004C022O004E022O004E022O004F022O0050022O0051022O0052022O0055022O0057022O0057022O0058022O0058022O0058022O0059022O0059022O0059022O0059022O0059022O0059022O0059022O0059022O0059022O0059022O0059022O005A022O005A022O005A022O005A022O005A022O005B022O005B022O005C022O005E022O005E022O005F022O005F022O0060022O0062022O0062022O0063022O0063022O0064022O0064022O0064022O0064022O0064022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0065022O0066022O0066022O0064022O0067022O0069022O0069022O0069022O0069022O0069022O0069022O0069022O0069022O0069022O0069022O0069022O006A022O006A022O006A022O006A022O006C022O006C022O006C022O006C022O006C022O006D022O006D022O006D022O006D022O006D022O006D022O006D022O006E022O0070022O0070022O0070022O006E022O0070022O006D022O0070022O0071022O0073022O0073022O0073022O0073022O0074022O0074022O0074022O0074022O0074022O0075022O0075022O0073022O0076022O0079022O007A022O007B022O007D022O007E022O0080022O00783O00023O00033O00103O00103O00233O00113O00773O00773O00773O00243O00A63O00A63O00783O00A73O00A93O00A93O00AA3O00DE3O00DE3O00DE3O00DE3O00DE3O00DF3O00DF3O00E03O00E23O00E23O00E33O00E33O00E33O00E33O00E43O00E43O00E43O00E43O00FC3O00E53O00FD3O00FF3O00FF4O00012O002O012O002O012O002O012O002O012O0002012O0002012O0002012O0002012O0003012O0003012O0003012O0003012O0003012O0003012O0004012O0004012O0004012O0004012O0005012O0005012O0005012O0005012O0005012O0005012O0006012O0006012O0006012O0006012O0007012O0007012O0007012O0007012O0007012O0007012O0009012O0009012O0009012O000B012O000D012O000D012O000E012O000F012O0028012O0029012O002B012O002B012O0080022O0080022O0080022O0080022O0080022O0080022O002C012O0081022O0081022O0081022O0081022O0082022O0084022O0084022O0085022O0085022O0085022O0085022O0085022O0086022O0086022O0086022O0086022O0086022O0087022O0087022O0087022O0087022O0087022O0088022O0089022O008A022O008B022O00",v8());end
